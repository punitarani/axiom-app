// This file is auto-generated by @hey-api/openapi-ts

export const AccountAPIOptionDeliverableSchema = {
  properties: {
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    deliverableUnits: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Deliverableunits',
    },
    apiCurrencyType: {
      anyOf: [
        {
          $ref: '#/components/schemas/ApiCurrencyType',
        },
        {
          type: 'null',
        },
      ],
    },
    assetType: {
      anyOf: [
        {
          $ref: '#/components/schemas/axiom__schwab_models_account__AssetType',
        },
        {
          type: 'null',
        },
      ],
    },
  },
  type: 'object',
  title: 'AccountAPIOptionDeliverable',
} as const

export const AccountCashEquivalentSchema = {
  properties: {
    assetType: {
      type: 'string',
      enum: ['CASH_EQUIVALENT'],
      const: 'CASH_EQUIVALENT',
      title: 'Assettype',
    },
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    instrumentId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Instrumentid',
    },
    netChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netchange',
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type11',
        },
        {
          type: 'null',
        },
      ],
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'AccountCashEquivalent',
} as const

export const AccountCollectiveInvestmentSchema = {
  properties: {
    assetType: {
      type: 'string',
      enum: ['COLLECTIVE_INVESTMENT'],
      const: 'COLLECTIVE_INVESTMENT',
      title: 'Assettype',
    },
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    instrumentId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Instrumentid',
    },
    netChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netchange',
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type2',
        },
        {
          type: 'null',
        },
      ],
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'AccountCollectiveInvestment',
} as const

export const AccountEquitySchema = {
  properties: {
    assetType: {
      type: 'string',
      enum: ['EQUITY'],
      const: 'EQUITY',
      title: 'Assettype',
    },
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    instrumentId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Instrumentid',
    },
    netChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netchange',
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'AccountEquity',
} as const

export const AccountFixedIncomeSchema = {
  properties: {
    assetType: {
      type: 'string',
      enum: ['FIXED_INCOME'],
      const: 'FIXED_INCOME',
      title: 'Assettype',
    },
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    instrumentId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Instrumentid',
    },
    netChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netchange',
    },
    maturityDate: {
      anyOf: [
        {
          type: 'string',
          format: 'date-time',
        },
        {
          type: 'null',
        },
      ],
      title: 'Maturitydate',
    },
    factor: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Factor',
    },
    variableRate: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Variablerate',
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'AccountFixedIncome',
} as const

export const AccountMutualFundSchema = {
  properties: {
    assetType: {
      type: 'string',
      enum: ['MUTUAL_FUND'],
      const: 'MUTUAL_FUND',
      title: 'Assettype',
    },
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    instrumentId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Instrumentid',
    },
    netChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netchange',
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'AccountMutualFund',
} as const

export const AccountOptionSchema = {
  properties: {
    assetType: {
      type: 'string',
      enum: ['OPTION'],
      const: 'OPTION',
      title: 'Assettype',
    },
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    instrumentId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Instrumentid',
    },
    netChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netchange',
    },
    optionDeliverables: {
      anyOf: [
        {
          items: {
            $ref: '#/components/schemas/AccountAPIOptionDeliverable',
          },
          type: 'array',
        },
        {
          type: 'null',
        },
      ],
      title: 'Optiondeliverables',
    },
    putCall: {
      anyOf: [
        {
          $ref: '#/components/schemas/PutCall',
        },
        {
          type: 'null',
        },
      ],
    },
    optionMultiplier: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Optionmultiplier',
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type12',
        },
        {
          type: 'null',
        },
      ],
    },
    underlyingSymbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Underlyingsymbol',
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'AccountOption',
} as const

export const AccountsInstrumentSchema = {
  oneOf: [
    {
      $ref: '#/components/schemas/AccountCashEquivalent',
    },
    {
      $ref: '#/components/schemas/AccountEquity',
    },
    {
      $ref: '#/components/schemas/AccountFixedIncome',
    },
    {
      $ref: '#/components/schemas/AccountMutualFund',
    },
    {
      $ref: '#/components/schemas/AccountOption',
    },
    {
      $ref: '#/components/schemas/AccountCollectiveInvestment',
    },
  ],
  title: 'AccountsInstrument',
  discriminator: {
    propertyName: 'assetType',
    mapping: {
      CASH_EQUIVALENT: '#/components/schemas/AccountCashEquivalent',
      COLLECTIVE_INVESTMENT: '#/components/schemas/AccountCollectiveInvestment',
      EQUITY: '#/components/schemas/AccountEquity',
      FIXED_INCOME: '#/components/schemas/AccountFixedIncome',
      MUTUAL_FUND: '#/components/schemas/AccountMutualFund',
      OPTION: '#/components/schemas/AccountOption',
    },
  },
} as const

export const ActivityType1Schema = {
  type: 'string',
  enum: ['ACTIVITY_CORRECTION', 'EXECUTION', 'ORDER_ACTION', 'TRANSFER', 'UNKNOWN'],
  title: 'ActivityType1',
} as const

export const ApiCurrencyTypeSchema = {
  type: 'string',
  enum: ['USD', 'CAD', 'EUR', 'JPY'],
  title: 'ApiCurrencyType',
} as const

export const BondSchema = {
  properties: {
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    exchange: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Exchange',
    },
    assetType: {
      anyOf: [
        {
          $ref: '#/components/schemas/axiom__schwab_models__AssetType',
        },
        {
          type: 'null',
        },
      ],
    },
    bondFactor: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Bondfactor',
    },
    bondMultiplier: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Bondmultiplier',
    },
    bondPrice: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Bondprice',
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type',
        },
        {
          type: 'null',
        },
      ],
    },
  },
  type: 'object',
  title: 'Bond',
} as const

export const CandleSchema = {
  properties: {
    close: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Close',
    },
    datetime: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Datetime',
    },
    datetimeISO8601: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Datetimeiso8601',
    },
    high: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'High',
    },
    low: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Low',
    },
    open: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Open',
    },
    volume: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Volume',
    },
  },
  type: 'object',
  title: 'Candle',
} as const

export const CandleListSchema = {
  properties: {
    candles: {
      anyOf: [
        {
          items: {
            $ref: '#/components/schemas/Candle',
          },
          type: 'array',
        },
        {
          type: 'null',
        },
      ],
      title: 'Candles',
    },
    empty: {
      anyOf: [
        {
          type: 'boolean',
        },
        {
          type: 'null',
        },
      ],
      title: 'Empty',
    },
    previousClose: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Previousclose',
    },
    previousCloseDate: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Previousclosedate',
    },
    previousCloseDateISO8601: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Previousclosedateiso8601',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
  },
  type: 'object',
  title: 'CandleList',
} as const

export const CollectiveInvestmentSchema = {
  properties: {
    assetType: {
      type: 'string',
      enum: ['COLLECTIVE_INVESTMENT'],
      const: 'COLLECTIVE_INVESTMENT',
      title: 'Assettype',
    },
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    instrumentId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Instrumentid',
    },
    netChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netchange',
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type2',
        },
        {
          type: 'null',
        },
      ],
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'CollectiveInvestment',
} as const

export const CurrencySchema = {
  properties: {
    assetType: {
      type: 'string',
      enum: ['CURRENCY'],
      const: 'CURRENCY',
      title: 'Assettype',
    },
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    instrumentId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Instrumentid',
    },
    netChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netchange',
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'Currency',
} as const

export const FeeType1Schema = {
  type: 'string',
  enum: [
    'COMMISSION',
    'SEC_FEE',
    'STR_FEE',
    'R_FEE',
    'CDSC_FEE',
    'OPT_REG_FEE',
    'ADDITIONAL_FEE',
    'MISCELLANEOUS_FEE',
    'FUTURES_EXCHANGE_FEE',
    'LOW_PROCEEDS_COMMISSION',
    'BASE_CHARGE',
    'GENERAL_CHARGE',
    'GST_FEE',
    'TAF_FEE',
    'INDEX_OPTION_FEE',
    'UNKNOWN',
  ],
  title: 'FeeType1',
} as const

export const ForexSchema = {
  properties: {
    assetType: {
      type: 'string',
      enum: ['FOREX'],
      const: 'FOREX',
      title: 'Assettype',
    },
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    instrumentId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Instrumentid',
    },
    netChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netchange',
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type5',
        },
        {
          type: 'null',
        },
      ],
    },
    baseCurrency: {
      anyOf: [
        {
          $ref: '#/components/schemas/Currency',
        },
        {
          type: 'null',
        },
      ],
    },
    counterCurrency: {
      anyOf: [
        {
          $ref: '#/components/schemas/Currency',
        },
        {
          type: 'null',
        },
      ],
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'Forex',
} as const

export const FundamentalInstSchema = {
  properties: {
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    high52: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'High52',
    },
    low52: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Low52',
    },
    dividendAmount: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Dividendamount',
    },
    dividendYield: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Dividendyield',
    },
    dividendDate: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Dividenddate',
    },
    peRatio: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Peratio',
    },
    pegRatio: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Pegratio',
    },
    pbRatio: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Pbratio',
    },
    prRatio: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Prratio',
    },
    pcfRatio: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Pcfratio',
    },
    grossMarginTTM: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Grossmarginttm',
    },
    grossMarginMRQ: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Grossmarginmrq',
    },
    netProfitMarginTTM: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netprofitmarginttm',
    },
    netProfitMarginMRQ: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netprofitmarginmrq',
    },
    operatingMarginTTM: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Operatingmarginttm',
    },
    operatingMarginMRQ: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Operatingmarginmrq',
    },
    returnOnEquity: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Returnonequity',
    },
    returnOnAssets: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Returnonassets',
    },
    returnOnInvestment: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Returnoninvestment',
    },
    quickRatio: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Quickratio',
    },
    currentRatio: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Currentratio',
    },
    interestCoverage: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Interestcoverage',
    },
    totalDebtToCapital: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Totaldebttocapital',
    },
    ltDebtToEquity: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Ltdebttoequity',
    },
    totalDebtToEquity: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Totaldebttoequity',
    },
    epsTTM: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Epsttm',
    },
    epsChangePercentTTM: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Epschangepercentttm',
    },
    epsChangeYear: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Epschangeyear',
    },
    epsChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Epschange',
    },
    revChangeYear: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Revchangeyear',
    },
    revChangeTTM: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Revchangettm',
    },
    revChangeIn: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Revchangein',
    },
    sharesOutstanding: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Sharesoutstanding',
    },
    marketCapFloat: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Marketcapfloat',
    },
    marketCap: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Marketcap',
    },
    bookValuePerShare: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Bookvaluepershare',
    },
    shortIntToFloat: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Shortinttofloat',
    },
    shortIntDayToCover: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Shortintdaytocover',
    },
    divGrowthRate3Year: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Divgrowthrate3Year',
    },
    dividendPayAmount: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Dividendpayamount',
    },
    dividendPayDate: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Dividendpaydate',
    },
    beta: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Beta',
    },
    vol1DayAvg: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Vol1Dayavg',
    },
    vol10DayAvg: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Vol10Dayavg',
    },
    vol3MonthAvg: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Vol3Monthavg',
    },
    avg10DaysVolume: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Avg10Daysvolume',
    },
    avg1DayVolume: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Avg1Dayvolume',
    },
    avg3MonthVolume: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Avg3Monthvolume',
    },
    declarationDate: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Declarationdate',
    },
    dividendFreq: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Dividendfreq',
    },
    eps: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Eps',
    },
    corpactionDate: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Corpactiondate',
    },
    dtnVolume: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Dtnvolume',
    },
    nextDividendPayDate: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Nextdividendpaydate',
    },
    nextDividendDate: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Nextdividenddate',
    },
    fundLeverageFactor: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Fundleveragefactor',
    },
    fundStrategy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Fundstrategy',
    },
  },
  type: 'object',
  title: 'FundamentalInst',
} as const

export const FutureSchema = {
  properties: {
    activeContract: {
      anyOf: [
        {
          type: 'boolean',
        },
        {
          type: 'null',
        },
      ],
      title: 'Activecontract',
      default: false,
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type6',
        },
        {
          type: 'null',
        },
      ],
    },
    expirationDate: {
      anyOf: [
        {
          type: 'string',
          format: 'date-time',
        },
        {
          type: 'null',
        },
      ],
      title: 'Expirationdate',
    },
    lastTradingDate: {
      anyOf: [
        {
          type: 'string',
          format: 'date-time',
        },
        {
          type: 'null',
        },
      ],
      title: 'Lasttradingdate',
    },
    firstNoticeDate: {
      anyOf: [
        {
          type: 'string',
          format: 'date-time',
        },
        {
          type: 'null',
        },
      ],
      title: 'Firstnoticedate',
    },
    multiplier: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Multiplier',
    },
    assetType: {
      type: 'string',
      enum: ['FUTURE'],
      const: 'FUTURE',
      title: 'Assettype',
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'Future',
} as const

export const HTTPValidationErrorSchema = {
  properties: {
    detail: {
      items: {
        $ref: '#/components/schemas/ValidationError',
      },
      type: 'array',
      title: 'Detail',
    },
  },
  type: 'object',
  title: 'HTTPValidationError',
} as const

export const IndexSchema = {
  properties: {
    activeContract: {
      anyOf: [
        {
          type: 'boolean',
        },
        {
          type: 'null',
        },
      ],
      title: 'Activecontract',
      default: false,
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type7',
        },
        {
          type: 'null',
        },
      ],
    },
    assetType: {
      type: 'string',
      enum: ['INDEX'],
      const: 'INDEX',
      title: 'Assettype',
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'Index',
} as const

export const InstrumentSchema = {
  properties: {
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    exchange: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Exchange',
    },
    assetType: {
      anyOf: [
        {
          $ref: '#/components/schemas/axiom__schwab_models__AssetType',
        },
        {
          type: 'null',
        },
      ],
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type',
        },
        {
          type: 'null',
        },
      ],
    },
  },
  type: 'object',
  title: 'Instrument',
} as const

export const InstrumentResponseSchema = {
  properties: {
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    exchange: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Exchange',
    },
    assetType: {
      anyOf: [
        {
          $ref: '#/components/schemas/axiom__schwab_models__AssetType',
        },
        {
          type: 'null',
        },
      ],
    },
    bondFactor: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Bondfactor',
    },
    bondMultiplier: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Bondmultiplier',
    },
    bondPrice: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Bondprice',
    },
    fundamental: {
      anyOf: [
        {
          $ref: '#/components/schemas/FundamentalInst',
        },
        {
          type: 'null',
        },
      ],
    },
    instrumentInfo: {
      anyOf: [
        {
          $ref: '#/components/schemas/Instrument',
        },
        {
          type: 'null',
        },
      ],
    },
    bondInstrumentInfo: {
      anyOf: [
        {
          $ref: '#/components/schemas/Bond',
        },
        {
          type: 'null',
        },
      ],
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type',
        },
        {
          type: 'null',
        },
      ],
    },
  },
  type: 'object',
  title: 'InstrumentResponse',
} as const

export const PositionSchema = {
  properties: {
    shortQuantity: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Shortquantity',
    },
    averagePrice: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Averageprice',
    },
    currentDayProfitLoss: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Currentdayprofitloss',
    },
    currentDayProfitLossPercentage: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Currentdayprofitlosspercentage',
    },
    longQuantity: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Longquantity',
    },
    settledLongQuantity: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Settledlongquantity',
    },
    settledShortQuantity: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Settledshortquantity',
    },
    agedQuantity: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Agedquantity',
    },
    instrument: {
      anyOf: [
        {
          $ref: '#/components/schemas/AccountsInstrument',
        },
        {
          type: 'null',
        },
      ],
    },
    marketValue: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Marketvalue',
    },
    maintenanceRequirement: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Maintenancerequirement',
    },
    averageLongPrice: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Averagelongprice',
    },
    averageShortPrice: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Averageshortprice',
    },
    taxLotAverageLongPrice: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Taxlotaveragelongprice',
    },
    taxLotAverageShortPrice: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Taxlotaverageshortprice',
    },
    longOpenProfitLoss: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Longopenprofitloss',
    },
    shortOpenProfitLoss: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Shortopenprofitloss',
    },
    previousSessionLongQuantity: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Previoussessionlongquantity',
    },
    previousSessionShortQuantity: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Previoussessionshortquantity',
    },
    currentDayCost: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Currentdaycost',
    },
  },
  type: 'object',
  title: 'Position',
} as const

export const PositionEffect1Schema = {
  type: 'string',
  enum: ['OPENING', 'CLOSING', 'AUTOMATIC', 'UNKNOWN'],
  title: 'PositionEffect1',
} as const

export const ProductSchema = {
  properties: {
    assetType: {
      type: 'string',
      enum: ['PRODUCT'],
      const: 'PRODUCT',
      title: 'Assettype',
    },
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    instrumentId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Instrumentid',
    },
    netChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netchange',
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type10',
        },
        {
          type: 'null',
        },
      ],
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'Product',
} as const

export const PutCallSchema = {
  type: 'string',
  enum: ['PUT', 'CALL', 'UNKNOWN'],
  title: 'PutCall',
} as const

export const Status1Schema = {
  type: 'string',
  enum: ['VALID', 'INVALID', 'PENDING', 'UNKNOWN'],
  title: 'Status1',
} as const

export const SubAccountSchema = {
  type: 'string',
  enum: ['CASH', 'MARGIN', 'SHORT', 'DIV', 'INCOME', 'UNKNOWN'],
  title: 'SubAccount',
} as const

export const TransactionSchema = {
  properties: {
    activityId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Activityid',
    },
    time: {
      anyOf: [
        {
          type: 'string',
          format: 'date-time',
        },
        {
          type: 'null',
        },
      ],
      title: 'Time',
    },
    user: {
      anyOf: [
        {
          $ref: '#/components/schemas/UserDetails',
        },
        {
          type: 'null',
        },
      ],
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    accountNumber: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Accountnumber',
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/TransactionType',
        },
        {
          type: 'null',
        },
      ],
    },
    status: {
      anyOf: [
        {
          $ref: '#/components/schemas/Status1',
        },
        {
          type: 'null',
        },
      ],
    },
    subAccount: {
      anyOf: [
        {
          $ref: '#/components/schemas/SubAccount',
        },
        {
          type: 'null',
        },
      ],
    },
    tradeDate: {
      anyOf: [
        {
          type: 'string',
          format: 'date-time',
        },
        {
          type: 'null',
        },
      ],
      title: 'Tradedate',
    },
    settlementDate: {
      anyOf: [
        {
          type: 'string',
          format: 'date-time',
        },
        {
          type: 'null',
        },
      ],
      title: 'Settlementdate',
    },
    positionId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Positionid',
    },
    orderId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Orderid',
    },
    netAmount: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netamount',
    },
    activityType: {
      anyOf: [
        {
          $ref: '#/components/schemas/ActivityType1',
        },
        {
          type: 'null',
        },
      ],
    },
    transferItems: {
      anyOf: [
        {
          items: {
            $ref: '#/components/schemas/TransferItem',
          },
          type: 'array',
        },
        {
          type: 'null',
        },
      ],
      title: 'Transferitems',
    },
  },
  type: 'object',
  title: 'Transaction',
} as const

export const TransactionAPIOptionDeliverableSchema = {
  properties: {
    rootSymbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Rootsymbol',
    },
    strikePercent: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Strikepercent',
    },
    deliverableNumber: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Deliverablenumber',
    },
    deliverableUnits: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Deliverableunits',
    },
    deliverable: {
      anyOf: [
        {
          $ref: '#/components/schemas/TransactionInstrument',
        },
        {
          type: 'null',
        },
      ],
    },
    assetType: {
      anyOf: [
        {
          $ref: '#/components/schemas/axiom__schwab_models_account__AssetType',
        },
        {
          type: 'null',
        },
      ],
    },
  },
  type: 'object',
  title: 'TransactionAPIOptionDeliverable',
} as const

export const TransactionCashEquivalentSchema = {
  properties: {
    assetType: {
      type: 'string',
      enum: ['CASH_EQUIVALENT'],
      const: 'CASH_EQUIVALENT',
      title: 'Assettype',
    },
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    instrumentId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Instrumentid',
    },
    netChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netchange',
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type1',
        },
        {
          type: 'null',
        },
      ],
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'TransactionCashEquivalent',
} as const

export const TransactionEquitySchema = {
  properties: {
    assetType: {
      type: 'string',
      enum: ['EQUITY'],
      const: 'EQUITY',
      title: 'Assettype',
    },
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    instrumentId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Instrumentid',
    },
    netChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netchange',
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type3',
        },
        {
          type: 'null',
        },
      ],
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'TransactionEquity',
} as const

export const TransactionFixedIncomeSchema = {
  properties: {
    assetType: {
      type: 'string',
      enum: ['FIXED_INCOME'],
      const: 'FIXED_INCOME',
      title: 'Assettype',
    },
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    instrumentId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Instrumentid',
    },
    netChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netchange',
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type4',
        },
        {
          type: 'null',
        },
      ],
    },
    maturityDate: {
      anyOf: [
        {
          type: 'string',
          format: 'date-time',
        },
        {
          type: 'null',
        },
      ],
      title: 'Maturitydate',
    },
    factor: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Factor',
    },
    multiplier: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Multiplier',
    },
    variableRate: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Variablerate',
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'TransactionFixedIncome',
} as const

export const TransactionInstrumentSchema = {
  oneOf: [
    {
      $ref: '#/components/schemas/TransactionCashEquivalent',
    },
    {
      $ref: '#/components/schemas/CollectiveInvestment',
    },
    {
      $ref: '#/components/schemas/Currency',
    },
    {
      $ref: '#/components/schemas/TransactionEquity',
    },
    {
      $ref: '#/components/schemas/TransactionFixedIncome',
    },
    {
      $ref: '#/components/schemas/Forex',
    },
    {
      $ref: '#/components/schemas/Future',
    },
    {
      $ref: '#/components/schemas/Index',
    },
    {
      $ref: '#/components/schemas/TransactionMutualFund',
    },
    {
      $ref: '#/components/schemas/TransactionOption',
    },
    {
      $ref: '#/components/schemas/Product',
    },
  ],
  title: 'TransactionInstrument',
  discriminator: {
    propertyName: 'assetType',
    mapping: {
      CASH_EQUIVALENT: '#/components/schemas/TransactionCashEquivalent',
      COLLECTIVE_INVESTMENT: '#/components/schemas/CollectiveInvestment',
      CURRENCY: '#/components/schemas/Currency',
      EQUITY: '#/components/schemas/TransactionEquity',
      FIXED_INCOME: '#/components/schemas/TransactionFixedIncome',
      FOREX: '#/components/schemas/Forex',
      FUTURE: '#/components/schemas/Future',
      INDEX: '#/components/schemas/Index',
      MUTUAL_FUND: '#/components/schemas/TransactionMutualFund',
      OPTION: '#/components/schemas/TransactionOption',
      PRODUCT: '#/components/schemas/Product',
    },
  },
} as const

export const TransactionMutualFundSchema = {
  properties: {
    assetType: {
      type: 'string',
      enum: ['MUTUAL_FUND'],
      const: 'MUTUAL_FUND',
      title: 'Assettype',
    },
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    instrumentId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Instrumentid',
    },
    netChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netchange',
    },
    fundFamilyName: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Fundfamilyname',
    },
    fundFamilySymbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Fundfamilysymbol',
    },
    fundGroup: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Fundgroup',
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type8',
        },
        {
          type: 'null',
        },
      ],
    },
    exchangeCutoffTime: {
      anyOf: [
        {
          type: 'string',
          format: 'date-time',
        },
        {
          type: 'null',
        },
      ],
      title: 'Exchangecutofftime',
    },
    purchaseCutoffTime: {
      anyOf: [
        {
          type: 'string',
          format: 'date-time',
        },
        {
          type: 'null',
        },
      ],
      title: 'Purchasecutofftime',
    },
    redemptionCutoffTime: {
      anyOf: [
        {
          type: 'string',
          format: 'date-time',
        },
        {
          type: 'null',
        },
      ],
      title: 'Redemptioncutofftime',
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'TransactionMutualFund',
} as const

export const TransactionOptionSchema = {
  properties: {
    assetType: {
      type: 'string',
      enum: ['OPTION'],
      const: 'OPTION',
      title: 'Assettype',
    },
    cusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cusip',
    },
    symbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Symbol',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    instrumentId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Instrumentid',
    },
    netChange: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Netchange',
    },
    expirationDate: {
      anyOf: [
        {
          type: 'string',
          format: 'date-time',
        },
        {
          type: 'null',
        },
      ],
      title: 'Expirationdate',
    },
    optionDeliverables: {
      anyOf: [
        {
          items: {
            $ref: '#/components/schemas/TransactionAPIOptionDeliverable',
          },
          type: 'array',
        },
        {
          type: 'null',
        },
      ],
      title: 'Optiondeliverables',
    },
    optionPremiumMultiplier: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Optionpremiummultiplier',
    },
    putCall: {
      anyOf: [
        {
          $ref: '#/components/schemas/PutCall',
        },
        {
          type: 'null',
        },
      ],
    },
    strikePrice: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Strikeprice',
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type9',
        },
        {
          type: 'null',
        },
      ],
    },
    underlyingSymbol: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Underlyingsymbol',
    },
    underlyingCusip: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Underlyingcusip',
    },
    deliverable: {
      anyOf: [
        {
          $ref: '#/components/schemas/TransactionInstrument',
        },
        {
          type: 'null',
        },
      ],
    },
  },
  type: 'object',
  required: ['assetType'],
  title: 'TransactionOption',
} as const

export const TransactionTypeSchema = {
  type: 'string',
  enum: [
    'TRADE',
    'RECEIVE_AND_DELIVER',
    'DIVIDEND_OR_INTEREST',
    'ACH_RECEIPT',
    'ACH_DISBURSEMENT',
    'CASH_RECEIPT',
    'CASH_DISBURSEMENT',
    'ELECTRONIC_FUND',
    'WIRE_OUT',
    'WIRE_IN',
    'JOURNAL',
    'MEMORANDUM',
    'MARGIN_CALL',
    'MONEY_MARKET',
    'SMA_ADJUSTMENT',
  ],
  title: 'TransactionType',
} as const

export const TransferItemSchema = {
  properties: {
    instrument: {
      anyOf: [
        {
          $ref: '#/components/schemas/TransactionInstrument',
        },
        {
          type: 'null',
        },
      ],
    },
    amount: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Amount',
    },
    cost: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cost',
    },
    price: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'null',
        },
      ],
      title: 'Price',
    },
    feeType: {
      anyOf: [
        {
          $ref: '#/components/schemas/FeeType1',
        },
        {
          type: 'null',
        },
      ],
    },
    positionEffect: {
      anyOf: [
        {
          $ref: '#/components/schemas/PositionEffect1',
        },
        {
          type: 'null',
        },
      ],
    },
  },
  type: 'object',
  title: 'TransferItem',
} as const

export const TypeSchema = {
  type: 'string',
  enum: [
    'BOND',
    'EQUITY',
    'ETF',
    'EXTENDED',
    'FOREX',
    'FUTURE',
    'FUTURE_OPTION',
    'FUNDAMENTAL',
    'INDEX',
    'INDICATOR',
    'MUTUAL_FUND',
    'OPTION',
    'UNKNOWN',
  ],
  title: 'Type',
} as const

export const Type1Schema = {
  type: 'string',
  enum: ['SWEEP_VEHICLE', 'SAVINGS', 'MONEY_MARKET_FUND', 'UNKNOWN'],
  title: 'Type1',
} as const

export const Type10Schema = {
  type: 'string',
  enum: ['TBD', 'UNKNOWN'],
  title: 'Type10',
} as const

export const Type11Schema = {
  type: 'string',
  enum: ['SWEEP_VEHICLE', 'SAVINGS', 'MONEY_MARKET_FUND', 'UNKNOWN'],
  title: 'Type11',
} as const

export const Type12Schema = {
  type: 'string',
  enum: ['VANILLA', 'BINARY', 'BARRIER', 'UNKNOWN'],
  title: 'Type12',
} as const

export const Type13Schema = {
  type: 'string',
  enum: ['ADVISOR_USER', 'BROKER_USER', 'CLIENT_USER', 'SYSTEM_USER', 'UNKNOWN'],
  title: 'Type13',
} as const

export const Type2Schema = {
  type: 'string',
  enum: ['UNIT_INVESTMENT_TRUST', 'EXCHANGE_TRADED_FUND', 'CLOSED_END_FUND', 'INDEX', 'UNITS'],
  title: 'Type2',
} as const

export const Type3Schema = {
  type: 'string',
  enum: [
    'COMMON_STOCK',
    'PREFERRED_STOCK',
    'DEPOSITORY_RECEIPT',
    'PREFERRED_DEPOSITORY_RECEIPT',
    'RESTRICTED_STOCK',
    'COMPONENT_UNIT',
    'RIGHT',
    'WARRANT',
    'CONVERTIBLE_PREFERRED_STOCK',
    'CONVERTIBLE_STOCK',
    'LIMITED_PARTNERSHIP',
    'WHEN_ISSUED',
    'UNKNOWN',
  ],
  title: 'Type3',
} as const

export const Type4Schema = {
  type: 'string',
  enum: [
    'BOND_UNIT',
    'CERTIFICATE_OF_DEPOSIT',
    'CONVERTIBLE_BOND',
    'COLLATERALIZED_MORTGAGE_OBLIGATION',
    'CORPORATE_BOND',
    'GOVERNMENT_MORTGAGE',
    'GNMA_BONDS',
    'MUNICIPAL_ASSESSMENT_DISTRICT',
    'MUNICIPAL_BOND',
    'OTHER_GOVERNMENT',
    'SHORT_TERM_PAPER',
    'US_TREASURY_BOND',
    'US_TREASURY_BILL',
    'US_TREASURY_NOTE',
    'US_TREASURY_ZERO_COUPON',
    'AGENCY_BOND',
    'WHEN_AS_AND_IF_ISSUED_BOND',
    'ASSET_BACKED_SECURITY',
    'UNKNOWN',
  ],
  title: 'Type4',
} as const

export const Type5Schema = {
  type: 'string',
  enum: ['STANDARD', 'NBBO', 'UNKNOWN'],
  title: 'Type5',
} as const

export const Type6Schema = {
  type: 'string',
  enum: ['STANDARD', 'UNKNOWN'],
  title: 'Type6',
} as const

export const Type7Schema = {
  type: 'string',
  enum: ['BROAD_BASED', 'NARROW_BASED', 'UNKNOWN'],
  title: 'Type7',
} as const

export const Type8Schema = {
  type: 'string',
  enum: [
    'NOT_APPLICABLE',
    'OPEN_END_NON_TAXABLE',
    'OPEN_END_TAXABLE',
    'NO_LOAD_NON_TAXABLE',
    'NO_LOAD_TAXABLE',
    'UNKNOWN',
  ],
  title: 'Type8',
} as const

export const Type9Schema = {
  type: 'string',
  enum: ['VANILLA', 'BINARY', 'BARRIER', 'UNKNOWN'],
  title: 'Type9',
} as const

export const UserDetailsSchema = {
  properties: {
    cdDomainId: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Cddomainid',
    },
    login: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Login',
    },
    type: {
      anyOf: [
        {
          $ref: '#/components/schemas/Type13',
        },
        {
          type: 'null',
        },
      ],
    },
    userId: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Userid',
    },
    systemUserName: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Systemusername',
    },
    firstName: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Firstname',
    },
    lastName: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Lastname',
    },
    brokerRepCode: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Brokerrepcode',
    },
  },
  type: 'object',
  title: 'UserDetails',
} as const

export const ValidationErrorSchema = {
  properties: {
    loc: {
      items: {
        anyOf: [
          {
            type: 'string',
          },
          {
            type: 'integer',
          },
        ],
      },
      type: 'array',
      title: 'Location',
    },
    msg: {
      type: 'string',
      title: 'Message',
    },
    type: {
      type: 'string',
      title: 'Error Type',
    },
  },
  type: 'object',
  required: ['loc', 'msg', 'type'],
  title: 'ValidationError',
} as const

export const axiom__schwab_models__AssetTypeSchema = {
  type: 'string',
  enum: [
    'BOND',
    'EQUITY',
    'ETF',
    'EXTENDED',
    'FOREX',
    'FUTURE',
    'FUTURE_OPTION',
    'FUNDAMENTAL',
    'INDEX',
    'INDICATOR',
    'MUTUAL_FUND',
    'OPTION',
    'UNKNOWN',
  ],
  title: 'AssetType',
} as const

export const axiom__schwab_models_account__AssetTypeSchema = {
  type: 'string',
  enum: [
    'EQUITY',
    'MUTUAL_FUND',
    'OPTION',
    'FUTURE',
    'FOREX',
    'INDEX',
    'CASH_EQUIVALENT',
    'FIXED_INCOME',
    'PRODUCT',
    'CURRENCY',
    'COLLECTIVE_INVESTMENT',
  ],
  title: 'AssetType',
} as const
